name: Windows Deleted Registry By A Non Critical Process File Path
id: 15e70689-f55b-489e-8a80-6d0cd6d8aad2
version: 6
date: '2024-11-13'
author: Steven Dick, Teoderick Contreras, Splunk
status: production
type: Anomaly
description: The following analytic detects the deletion of registry keys by non-critical
  processes. It leverages Endpoint Detection and Response (EDR) data, focusing on
  registry deletion events and correlating them with processes not typically associated
  with system or program files. This activity is significant as it may indicate malware,
  such as the Double Zero wiper, attempting to evade defenses or cause destructive
  payload impacts. If confirmed malicious, this behavior could lead to significant
  system damage, loss of critical configurations, and potential disruption of services.
data_source:
- Sysmon EventID 1 AND Sysmon EventID 12
- Sysmon EventID 1 AND Sysmon EventID 13
search: '| tstats prestats=t `security_content_summariesonly` count min(_time) as
  firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_path
  IN ("*\\windows\\*", "*\\program files*") by Processes.action Processes.dest Processes.original_file_name
  Processes.parent_process Processes.parent_process_exec Processes.parent_process_guid
  Processes.parent_process_id Processes.parent_process_name Processes.parent_process_path
  Processes.process Processes.process_exec Processes.process_guid Processes.process_hash
  Processes.process_id Processes.process_integrity_level Processes.process_name Processes.process_path
  Processes.user Processes.user_id Processes.vendor_product | `drop_dm_object_name(Processes)`
  | tstats prestats=t append=t `security_content_summariesonly` count min(_time) as
  firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.action=deleted
  by Registry.action Registry.dest Registry.process_guid Registry.process_id Registry.registry_hive
  Registry.registry_path Registry.registry_key_name Registry.registry_value_data Registry.registry_value_name
  Registry.registry_value_type Registry.status Registry.user Registry.vendor_product
  | `drop_dm_object_name(Registry)` | table action dest original_file_name parent_process
  parent_process_exec parent_process_guid parent_process_id parent_process_name parent_process_path
  process process_exec process_guid process_hash process_id process_integrity_level
  process_name process_path user user_id vendor_product registry_hive registry_path
  registry_key_name registry_value_data registry_value_name registry_value_type status
  | stats values(action) as action values(dest) as dest values(original_file_name)
  as original_file_name values(parent_process) as parent_process values(parent_process_exec)
  as parent_process_exec values(parent_process_guid) as parent_process_guid values(parent_process_id)
  as parent_process_id values(parent_process_name) as parent_process_name values(parent_process_path)
  as parent_process_path values(process) as process values(process_exec) as process_exec
  values(process_hash) as process_hash values(process_id) as process_id values(process_integrity_level)
  as process_integrity_level values(process_name) as process_name values(process_path)
  as process_path values(user) as user values(user_id) as user_id values(vendor_product)
  as vendor_product values(registry_hive) as registry_hive values(registry_path) as
  registry_path values(registry_key_name) as registry_key_name values(registry_value_data)
  as registry_value_data values(registry_value_name) as registry_value_name values(registry_value_type)
  as registry_value_type values(status) as status by process_guid | where isnotnull(process_path)
  AND isnotnull(registry_value_name) | `windows_deleted_registry_by_a_non_critical_process_file_path_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: This detection can catch for third party application updates
  or installation. In this scenario false positive filter is needed.
references:
- https://blog.talosintelligence.com/2022/03/threat-advisory-doublezero.html
drilldown_searches:
- name: View the detection results for - "$dest$"
  search: '%original_detection_search% | search  dest = "$dest$"'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
- name: View risk events for the last 7 days for - "$dest$"
  search: '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$dest$")
    starthoursago=168  | stats count min(_time) as firstTime max(_time) as lastTime
    values(search_name) as "Search Name" values(risk_message) as "Risk Message" values(analyticstories)
    as "Analytic Stories" values(annotations._all) as "Annotations" values(annotations.mitre_attack.mitre_tactic)
    as "ATT&CK Tactics" by normalized_risk_object | `security_content_ctime(firstTime)`
    | `security_content_ctime(lastTime)`'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
rba:
  message: The registry was deleted by a suspicious process named $process_name$ with
    the process path $process_path$ on dest $dest$.
  risk_objects:
  - field: dest
    type: system
    score: 36
  threat_objects: []
tags:
  analytic_story:
  - Data Destruction
  - Double Zero Destructor
  asset_type: Endpoint
  mitre_attack_id:
  - T1112
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/malware/doublezero_wiper/sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: XmlWinEventLog
