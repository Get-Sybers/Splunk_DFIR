[mitre:stix-enterprise-attack]
BREAK_ONLY_BEFORE = ^{
DATETIME_CONFIG = CURRENT
LINE_BREAKER = ^{
MAX_TIMESTAMP_LOOKAHEAD =
category = Structured
description = A variant of the JSON source type, with support for nonexistent timestamps
pulldown_type = true
INDEXED_EXTRACTIONS = json
KV_MODE = none

[mitre:car-attack]
BREAK_ONLY_BEFORE = ^{
DATETIME_CONFIG = CURRENT
LINE_BREAKER = ^{
MAX_TIMESTAMP_LOOKAHEAD =
category = Structured
description = A variant of the JSON source type, with support for nonexistent timestamps
pulldown_type = true
INDEXED_EXTRACTIONS = json
KV_MODE = none
# Add field extractions for techniques
REPORT-technique_extraction = technique_extraction
FIELDALIAS-technique_id = techniqueID AS technique_id
FIELDALIAS-technique_comment = comment AS car_analytics
EVAL-has_subtechniques = if(showSubtechniques=="true", "true", "false")

[mitre:car-analytics]
SEDCMD-remove_start_wrapper = s/^\s*{"analytics":\s*\[//
SEDCMD-remove_end_wrapper = s/\]}$//
SEDCMD-add_linebreaks = s/\},\s*\{/}\n{/g
LINE_BREAKER = ^\n{"shortName"
SHOULD_LINEMERGE = true
DATETIME_CONFIG = CURRENT
KV_MODE = json
# Ensure we capture the entire file in one event initially
MAX_EVENTS = 100000
# Use this much simpler approach:
# Configure the file monitoring to use a specific format
INDEXED_EXTRACTIONS = json
# Tell Splunk to use jq-like path extraction for the array
JSON_ARRAY_PATH = $.analytics
# Enable automatic handling of JSON arrays
JSON_EXTRACT_ARRAY = true
# Basic settings
TRUNCATE = 0
DATETIME_CONFIG = CURRENT
# Field extractions - only add after basic ingestion works
# REPORT-analytics = spath_car_analytics
# REPORT-field_extraction = analytics_fields_extraction
# EVAL-fields = mvjoin(fields, ",")
# EVAL-attack_tactic = 'attack{}.tactics{}'
# EVAL-attack_technique = 'attack{}.technique'
# EVAL-mitre_id = case(match(name, "^CAR-\d{4}-\d{2}-\d{3}$"), name, true(), "unknown")

[mitre:car-datamodel]
BREAK_ONLY_BEFORE = ^{
DATETIME_CONFIG = CURRENT
LINE_BREAKER = ^{
MAX_TIMESTAMP_LOOKAHEAD =
category = Structured
description = A variant of the JSON source type, with support for nonexistent timestamps
pulldown_type = true
INDEXED_EXTRACTIONS = json
KV_MODE = none
# Extract data model information
REPORT-extract_datamodel = extract_datamodel

[mitre:car-sensors]
BREAK_ONLY_BEFORE = ^{
DATETIME_CONFIG = CURRENT
LINE_BREAKER = ^{
MAX_TIMESTAMP_LOOKAHEAD =
category = Structured
description = A variant of the JSON source type, with support for nonexistent timestamps
pulldown_type = true
INDEXED_EXTRACTIONS = json
KV_MODE = none
# Extract sensor information
REPORT-extract_sensors = extract_sensors

[mitre:car-snippet]
BREAK_ONLY_BEFORE = ^{
DATETIME_CONFIG = CURRENT
LINE_BREAKER = ^{
MAX_TIMESTAMP_LOOKAHEAD =
category = Structured
description = A variant of the JSON source type, with support for nonexistent timestamps
pulldown_type = true
INDEXED_EXTRACTIONS = json
KV_MODE = none
# Extract key fields from snippet JSON
EVAL-event_timestamp = strptime(@event_date_creation, "%Y-%m-%dT%H:%M:%S.%3NZ")
FIELDALIAS-event_action = action AS event_action
FIELDALIAS-process_name = process_name AS target_process
FIELDALIAS-thread_id = thread_id AS detected_thread_id

[mitre:car-tp-analytics]
BREAK_ONLY_BEFORE = ^{
DATETIME_CONFIG = CURRENT
LINE_BREAKER = ^{
MAX_TIMESTAMP_LOOKAHEAD =
category = Structured
description = A variant of the JSON source type, with support for nonexistent timestamps
pulldown_type = true
INDEXED_EXTRACTIONS = json
KV_MODE = none
# Extract analytics data from true positives
EVAL-event_timestamp = strptime(@event_date_creation, "%Y-%m-%dT%H:%M:%S.%3NZ") 
FIELDALIAS-event_id = event_id AS detection_event_id
FIELDALIAS-process_command = process_command_line AS command_executed

[mitre:cti-enterprise-attack]
BREAK_ONLY_BEFORE = ^{
DATETIME_CONFIG = CURRENT
LINE_BREAKER = ^{
MAX_TIMESTAMP_LOOKAHEAD =
category = Structured
description = A variant of the JSON source type, with support for nonexistent timestamps
pulldown_type = true
INDEXED_EXTRACTIONS = json
KV_MODE = none
# Extract CTI data
REPORT-extract_cti_objects = extract_cti_objects

[mitre:cti-stix-capec]
BREAK_ONLY_BEFORE = ^{
DATETIME_CONFIG = CURRENT
LINE_BREAKER = ^{
MAX_TIMESTAMP_LOOKAHEAD =
category = Structured
description = A variant of the JSON source type, with support for nonexistent timestamps
pulldown_type = true
INDEXED_EXTRACTIONS = json
KV_MODE = none
# Extract CAPEC data
REPORT-extract_capec_objects = extract_capec_objects