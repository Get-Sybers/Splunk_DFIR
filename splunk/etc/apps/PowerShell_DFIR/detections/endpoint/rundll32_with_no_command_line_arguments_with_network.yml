name: Rundll32 with no Command Line Arguments with Network
id: 35307032-a12d-11eb-835f-acde48001122
version: 10
date: '2025-02-10'
author: Steven Dick,  Michael Haag, Splunk
status: production
type: TTP
description: The following analytic detects the execution of rundll32.exe without
  command line arguments, followed by a network connection. This behavior is identified
  using Endpoint Detection and Response (EDR) telemetry and network traffic data.
  It is significant because rundll32.exe typically requires arguments to function,
  and its absence is often associated with malicious activity, such as Cobalt Strike.
  If confirmed malicious, this activity could indicate an attempt to establish unauthorized
  network connections, potentially leading to data exfiltration or further compromise
  of the system.
data_source:
- Sysmon EventID 1 AND Sysmon EventID 3
search: '| tstats prestats=t `security_content_summariesonly` count FROM datamodel=Endpoint.Processes
  where `process_rundll32` AND Processes.action!="blocked" by Processes.action Processes.dest
  Processes.original_file_name Processes.parent_process Processes.parent_process_exec
  Processes.parent_process_guid Processes.parent_process_id Processes.parent_process_name
  Processes.parent_process_path Processes.process Processes.process_exec Processes.process_guid
  Processes.process_hash Processes.process_id Processes.process_integrity_level Processes.process_name
  Processes.process_path Processes.user Processes.user_id Processes.vendor_product
  | `drop_dm_object_name(Processes)` | tstats prestats=t append=t `security_content_summariesonly`
  count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic.All_Traffic
  where All_Traffic.dest_port != 0 by All_Traffic.action All_Traffic.app All_Traffic.dest
  All_Traffic.dest_ip All_Traffic.dest_port All_Traffic.direction All_Traffic.dvc
  All_Traffic.protocol All_Traffic.protocol_version All_Traffic.src All_Traffic.src_ip
  All_Traffic.src_port All_Traffic.transport All_Traffic.user All_Traffic.vendor_product
  All_Traffic.process_id | `drop_dm_object_name(All_Traffic)` | table action dest
  original_file_name parent_process parent_process_exec parent_process_guid parent_process_id
  parent_process_name parent_process_path process process_exec process_guid process_hash
  process_id process_integrity_level process_name process_path user user_id vendor_product
  app dest_ip dest_port direction dvc protocol protocol_version src src_ip src_port
  transport | stats values(action) as action values(dest) as dest values(original_file_name)
  as original_file_name values(parent_process) as parent_process values(parent_process_exec)
  as parent_process_exec values(parent_process_guid) as parent_process_guid values(parent_process_id)
  as parent_process_id values(parent_process_name) as parent_process_name values(parent_process_path)
  as parent_process_path values(process) as process values(process_exec) as process_exec
  values(process_hash) as process_hash values(process_guid) as process_guid values(process_integrity_level)
  as process_integrity_level values(process_name) as process_name values(process_path)
  as process_path values(user) as user values(user_id) as user_id values(vendor_product)
  as vendor_product values(app) as app values(dest_ip) as dest_ip values(dest_port)
  as dest_port values(direction) as direction values(dvc) as dvc values(protocol)
  as protocol values(protocol_version) as protocol_version values(src) as src values(src_ip)
  as src_ip values(src_port) as src_port values(transport) as transport by process_id
  | where isnotnull(process_name) AND isnotnull(dest_port) | `rundll32_with_no_command_line_arguments_with_network_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: Although unlikely, some legitimate applications may use a moved
  copy of rundll32, triggering a false positive.
references:
- https://attack.mitre.org/techniques/T1218/011/
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.011/T1218.011.md
- https://lolbas-project.github.io/lolbas/Binaries/Rundll32/
- https://bohops.com/2018/02/26/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence/
drilldown_searches:
- name: View the detection results for - "$dest$"
  search: '%original_detection_search% | search  dest = "$dest$"'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
- name: View risk events for the last 7 days for - "$dest$"
  search: '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$dest$")
    starthoursago=168  | stats count min(_time) as firstTime max(_time) as lastTime
    values(search_name) as "Search Name" values(risk_message) as "Risk Message" values(analyticstories)
    as "Analytic Stories" values(annotations._all) as "Annotations" values(annotations.mitre_attack.mitre_tactic)
    as "ATT&CK Tactics" by normalized_risk_object | `security_content_ctime(firstTime)`
    | `security_content_ctime(lastTime)`'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
rba:
  message: A rundll32 process $process_name$ with no commandline argument like this
    process commandline $process$ in host $src$
  risk_objects:
  - field: dest
    type: system
    score: 70
  threat_objects:
  - field: process_name
    type: process_name
tags:
  analytic_story:
  - BlackSuit Ransomware
  - Suspicious Rundll32 Activity
  - Graceful Wipe Out Attack
  - Cobalt Strike
  - Compromised Windows Host
  - PrintNightmare CVE-2021-34527
  - BlackByte Ransomware
  asset_type: Endpoint
  cve:
  - CVE-2021-34527
  mitre_attack_id:
  - T1218.011
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1055/cobalt_strike/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: XmlWinEventLog
